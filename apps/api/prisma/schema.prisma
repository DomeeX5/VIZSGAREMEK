generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Country {
  country_id   Int    @id @default(autoincrement())
  country_name String
  cities       City[]
}

model State {
  state_id   Int    @id @default(autoincrement())
  state_name String
  cities     City[]
}

model City {
  city_id            Int     @id @default(autoincrement())
  city_name          String?
  Country_country_id Int
  State_state_id     Int?
  zip                Zip[]
  Country            Country @relation(fields: [Country_country_id], references: [country_id])
  State              State?  @relation(fields: [State_state_id], references: [state_id])

  @@unique([city_id, Country_country_id])
}

model Zip {
  zip_id                  Int        @id @default(autoincrement())
  zip_code                Int?
  City_city_id            Int
  City_Country_country_id Int
  City                    City       @relation(fields: [City_city_id, City_Country_country_id], references: [city_id, Country_country_id])
  Customer                Customer[]
  User                    User[]
}

model Customer {
  cust_id      Int     @id @default(autoincrement())
  name         String
  address      String
  phone_number Int
  email        String?
  Zip_zip_id   Int
  Zip          Zip     @relation(fields: [Zip_zip_id], references: [zip_id])
  User         User?   @relation(fields: [userUser_id], references: [user_id])
  userUser_id  Int?
  Order        Order[]
}

model Payment_type {
  pay_id    Int     @id @default(autoincrement())
  type_name String
  Order     Order[]
}

model Privilages {
  priv_id   Int    @id @default(autoincrement())
  priv_name String
  User      User[]
}

model User {
  user_id            Int        @id @default(autoincrement())
  username           String     @unique
  email              String
  password           String
  address            String?
  Zip_zip_id         Int
  Privilages_priv_id Int
  Zip                Zip        @relation(fields: [Zip_zip_id], references: [zip_id])
  Privilages         Privilages @relation(fields: [Privilages_priv_id], references: [priv_id])
  Customer           Customer[]
  Order              Order[]
}

model Order {
  order_id            Int          @id @default(autoincrement())
  order_date          DateTime
  ship_date           DateTime?
  Customer_cust_id    Int
  Payment_type_pay_id Int
  User_user_id        Int?
  Customer            Customer     @relation(fields: [Customer_cust_id], references: [cust_id])
  Payment_type        Payment_type @relation(fields: [Payment_type_pay_id], references: [pay_id])
  User                User?        @relation(fields: [User_user_id], references: [user_id])
  OrderItem           OrderItem[]
}

model Product {
  product_id   Int         @id @default(autoincrement())
  product_name String
  price        Int
  descreption  String?
  OrderItem    OrderItem[]
}

model OrderItem {
  Product_product_id Int
  Order_order_id     Int
  quantity           Int
  actual_price       Int
  Product            Product @relation(fields: [Product_product_id], references: [product_id])
  Order              Order   @relation(fields: [Order_order_id], references: [order_id])

  @@id([Product_product_id, Order_order_id])
}
